"""empty message

Revision ID: 1f683f9a5d1d
Revises: 
Create Date: 2021-07-16 15:39:28.351337

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f683f9a5d1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_token',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('business',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('bio', sa.String(length=100), nullable=True),
    sa.Column('photo', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('business_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('circle',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('bio', sa.String(length=100), nullable=True),
    sa.Column('photo', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('circle_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('specie',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('photo', sa.String(length=50), nullable=True),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('breed',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('specie_parent_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['specie_parent_id'], ['specie.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('business_executive_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('business_pid', sa.String(length=100), nullable=True),
    sa.Column('follower_pid', sa.String(length=100), nullable=True),
    sa.Column('is_executive', sa.Boolean(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['business_pid'], ['business.public_id'], ),
    sa.ForeignKeyConstraint(['follower_pid'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('business_operation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('day', sa.String(length=20), nullable=False),
    sa.Column('is_open', sa.Boolean(), nullable=False),
    sa.Column('start_at', sa.Time(), nullable=True),
    sa.Column('end_at', sa.Time(), nullable=True),
    sa.Column('business_prop_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['business_prop_id'], ['business.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('business_type_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('business_pid', sa.String(length=100), nullable=True),
    sa.Column('type_pid', sa.String(length=100), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['business_pid'], ['business.public_id'], ),
    sa.ForeignKeyConstraint(['type_pid'], ['business_type.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('circle_member_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('circle_pid', sa.String(length=100), nullable=True),
    sa.Column('member_pid', sa.String(length=100), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['circle_pid'], ['circle.public_id'], ),
    sa.ForeignKeyConstraint(['member_pid'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('circle_type_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('circle_pid', sa.String(length=100), nullable=True),
    sa.Column('type_pid', sa.String(length=100), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['circle_pid'], ['circle.public_id'], ),
    sa.ForeignKeyConstraint(['type_pid'], ['circle_type.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('content', sa.String(length=400), nullable=False),
    sa.Column('photo_1', sa.String(length=50), nullable=True),
    sa.Column('photo_2', sa.String(length=50), nullable=True),
    sa.Column('photo_3', sa.String(length=50), nullable=True),
    sa.Column('photo_4', sa.String(length=50), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('user_creator_id', sa.String(), nullable=False),
    sa.Column('business_pinboard_id', sa.String(), nullable=True),
    sa.Column('circle_confiner_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['business_pinboard_id'], ['business.public_id'], ),
    sa.ForeignKeyConstraint(['circle_confiner_id'], ['circle.public_id'], ),
    sa.ForeignKeyConstraint(['user_creator_id'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('content', sa.String(length=400), nullable=False),
    sa.Column('photo', sa.String(length=50), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('user_creator_id', sa.String(), nullable=False),
    sa.Column('post_parent_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['post_parent_id'], ['post.public_id'], ),
    sa.ForeignKeyConstraint(['user_creator_id'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('pet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('bio', sa.String(length=100), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('sex', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('photo', sa.String(length=50), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('is_private', sa.Integer(), nullable=False),
    sa.Column('specie_group_id', sa.String(), nullable=False),
    sa.Column('breed_subgroup_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['breed_subgroup_id'], ['breed.public_id'], ),
    sa.ForeignKeyConstraint(['specie_group_id'], ['specie.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('post_liker_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('post_pid', sa.String(length=100), nullable=True),
    sa.Column('liker_pid', sa.String(length=100), nullable=True),
    sa.Column('is_unliked', sa.Boolean(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['liker_pid'], ['user.public_id'], ),
    sa.ForeignKeyConstraint(['post_pid'], ['post.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('preference',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('user_selector_id', sa.String(), nullable=False),
    sa.Column('is_followed', sa.Boolean(), nullable=True),
    sa.Column('breed_subgroup_id', sa.String(), nullable=True),
    sa.Column('business_type_id', sa.String(), nullable=True),
    sa.Column('circle_type_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['breed_subgroup_id'], ['breed.public_id'], ),
    sa.ForeignKeyConstraint(['business_type_id'], ['business_type.public_id'], ),
    sa.ForeignKeyConstraint(['circle_type_id'], ['circle_type.public_id'], ),
    sa.ForeignKeyConstraint(['user_selector_id'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=False),
    sa.Column('content', sa.String(length=400), nullable=False),
    sa.Column('_type', sa.Integer(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('user_sender_id', sa.String(), nullable=False),
    sa.Column('user_recipient_id', sa.String(), nullable=False),
    sa.Column('pet_subject_id', sa.String(), nullable=True),
    sa.Column('post_subject_id', sa.String(), nullable=True),
    sa.Column('circle_subject_id', sa.String(), nullable=True),
    sa.Column('business_subject_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['business_subject_id'], ['business.public_id'], ),
    sa.ForeignKeyConstraint(['circle_subject_id'], ['circle.public_id'], ),
    sa.ForeignKeyConstraint(['pet_subject_id'], ['pet.public_id'], ),
    sa.ForeignKeyConstraint(['post_subject_id'], ['post.public_id'], ),
    sa.ForeignKeyConstraint(['user_recipient_id'], ['user.public_id'], ),
    sa.ForeignKeyConstraint(['user_sender_id'], ['user.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('pet_follower_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('pet_pid', sa.String(length=100), nullable=True),
    sa.Column('follower_pid', sa.String(length=100), nullable=True),
    sa.Column('is_owner', sa.Boolean(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['follower_pid'], ['user.public_id'], ),
    sa.ForeignKeyConstraint(['pet_pid'], ['pet.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('post_subject_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('post_pid', sa.String(length=100), nullable=True),
    sa.Column('subject_pid', sa.String(length=100), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_pid'], ['post.public_id'], ),
    sa.ForeignKeyConstraint(['subject_pid'], ['pet.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_subject_table')
    op.drop_table('pet_follower_table')
    op.drop_table('notification')
    op.drop_table('preference')
    op.drop_table('post_liker_table')
    op.drop_table('pet')
    op.drop_table('comment')
    op.drop_table('post')
    op.drop_table('circle_type_table')
    op.drop_table('circle_member_table')
    op.drop_table('business_type_table')
    op.drop_table('business_operation')
    op.drop_table('business_executive_table')
    op.drop_table('breed')
    op.drop_table('user')
    op.drop_table('specie')
    op.drop_table('circle_type')
    op.drop_table('circle')
    op.drop_table('business_type')
    op.drop_table('business')
    op.drop_table('blacklist_token')
    # ### end Alembic commands ###
