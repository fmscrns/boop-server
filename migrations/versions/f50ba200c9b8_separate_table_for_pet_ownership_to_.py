"""separate table for pet ownership to cater multiple pet owners

Revision ID: f50ba200c9b8
Revises: 1ec996437291
Create Date: 2021-06-03 12:13:50.745543

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f50ba200c9b8'
down_revision = '1ec996437291'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pet_follower_table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('pet_pid', sa.String(length=100), nullable=True),
    sa.Column('follower_pid', sa.String(length=100), nullable=True),
    sa.Column('is_owner', sa.Boolean(), nullable=True),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['follower_pid'], ['user.public_id'], ),
    sa.ForeignKeyConstraint(['pet_pid'], ['pet.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.add_column('pet', sa.Column('is_private', sa.Boolean(), nullable=False))
    op.drop_constraint('pet_user_owner_id_fkey', 'pet', type_='foreignkey')
    op.drop_column('pet', 'user_owner_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pet', sa.Column('user_owner_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key('pet_user_owner_id_fkey', 'pet', 'user', ['user_owner_id'], ['public_id'])
    op.drop_column('pet', 'is_private')
    op.drop_table('pet_follower_table')
    # ### end Alembic commands ###
